name: AkatsukiFE

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Zip Artifacts
        run: zip -r deploy.zip dist Procfile server.js package.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp deploy.zip s3://elasticbeanstalk-ap-northeast-2-730335325274/${{ github.run_id }}.zip

      - name: Deploy to Elastic Beanstalk Green environment
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ap-northeast-2
          application_name: AkatsukiFE
          environment_name: AkatsukiFE-green-env
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
          use_existing_version_if_available: true

      - name: Wait for Green environment to be healthy
        run: |
          while true; do
            STATUS=$(aws elasticbeanstalk describe-environments --environment-names AkatsukiFE-green-env --query 'Environments[0].Status' --output text)
            HEALTH=$(aws elasticbeanstalk describe-environments --environment-names AkatsukiFE-green-env --query 'Environments[0].Health' --output text)
            if [ "$STATUS" == "Ready" ] && [ "$HEALTH" == "Green" ]; then
              echo "Green environment is healthy and ready."
              break
            fi
            echo "Waiting for green environment to be ready and healthy..."
            sleep 30
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2

      - name: Swap CNAMEs to make Green environment live
        run: aws elasticbeanstalk swap-environment-cnames --source-environment-name AkatsukiFE-green-env --destination-environment-name AkatsukiFE-env
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2

      - name: Terminate old Blue environment
        run: aws elasticbeanstalk terminate-environment --environment-name AkatsukiFE-env --terminate-resources
        if: success()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
